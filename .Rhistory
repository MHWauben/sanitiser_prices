all_results <- readr::read_csv('data/sanitiser_scrape.csv')
results <- all_results
sanitiser_results <- results %>%
dplyr::mutate(ppv = prices / volume,
whole_price = prices + ifelse(is.na(delivery), 0, delivery)) %>%
dplyr::mutate(dppv = whole_price / volume) %>%
dplyr::filter(!is.na(ppv))
library(magrittr)
library(polite)
library(rvest)
library(dplyr)
library(stringr)
library(readr)
library(tidyr)
library(ggplot2)
sanitiser_results <- results %>%
dplyr::mutate(ppv = prices / volume,
whole_price = prices + ifelse(is.na(delivery), 0, delivery)) %>%
dplyr::mutate(dppv = whole_price / volume) %>%
dplyr::filter(!is.na(ppv))
ggplot(sanitiser_results)+
geom_histogram(aes(x = ppv))+
geom_histogram(aes(x = dppv), fill = 'red', alpha = 0.5)
sanitiser_results %>%
dplyr::filter(ppv < quantile(sanitiser_results$ppv, 0.99)) %>% # Remove outliers
dplyr::group_by(date) %>%
dplyr::summarise(Median = median(ppv),
med_dppv = median(dppv),
Mean = mean(ppv),
mean_dppv = mean(dppv),
sd_ppv = sd(ppv),
sd_dppv = sd(dppv),
num = n()) %>%
dplyr::ungroup() %>%
dplyr::mutate(se_ppv = sd_ppv / sqrt(num),
se_dppv = sd_dppv / sqrt(num)) %>%
tidyr::pivot_longer(cols = Median:mean_dppv,
names_to = 'metric') %>%
dplyr::mutate(upper_bound = ifelse(grepl('[mM]ean', metric),
ifelse(grepl('dppv', metric),
value + 1.96 * se_dppv,
value + 1.96 * se_ppv),
value),
lower_bound = ifelse(grepl('[mM]ean', metric),
ifelse(grepl('dppv', metric),
value - 1.96 * se_dppv,
value - 1.96 * se_ppv),
value)) %>%
dplyr::filter(metric %in% c('Mean', 'Median')) %>%
ggplot(aes(x = date))+
geom_ribbon(aes(ymin=lower_bound, # Error bands
ymax=upper_bound,
fill = metric),
alpha=0.25)+
geom_line(aes(y = value,
color = metric),
size = 1)+ # Point estimates
labs(title = 'Amazon.co.uk price per volume of liquid hand sanitiser products over time',
subtitle = 'Error band represents 1.96 * Standard Error',
x = '',
y = 'Price per mL (Â£)')+
theme_minimal()+
scale_colour_brewer(
type = "qual",
palette = 7,
aesthetics = c("colour", 'fill')
)
max(all_results$date)
